package com.github.yzqdev.pet_home.datagen;

import com.github.yzqdev.pet_home.server.item.PHItemRegistry;
import net.minecraft.data.PackOutput;
import net.neoforged.neoforge.common.data.LanguageProvider;

public class ModEnLangProvider extends LanguageProvider {
    public ModEnLangProvider(PackOutput output, String modid, String locale) {
        super(output, modid, locale);
    }

    @Override
    protected void addTranslations() {
        add("tooltips.pet_home.substitute_feather.desc", "[Allows pets to move to the fishing rod landing point, e.g. moving pets to a pet bed]");
        add("tooltips.pet_home.substitute_rotten_apple.desc", "[Feed to horses to turn them into zombie horses]");
        add("tooltips.pet_home.substitute_sinister_carrot.desc", "[Feed to horses to turn them into skeleton horses]");
        add("tooltips.pet_home.substitute_collar.desc", "[Right-click on pets to put a collar on them]");
        add("tooltips.pet_home.substitute_pet_bed.desc", "[Place pets on pet beds, pets will respawn the next day after death]");
        add("itemGroup.pet_home","Pet home | Items");
        add("item.pet_home.collar_tag","Collar Tag");
        add("item.pet_home.rotten_apple","Rotten Apple");
        add("item.pet_home.sinister_carrot","Sinister Carrot");
        add("item.pet_home.deflection_shield","Deflection Shield Model");
        add("item.pet_home.magnet","Magnet Model");
        add("item.pet_home.feather_on_a_stick","Feather on a Stick");
        add("item.pet_home.deed_of_ownership","release pet");
        add("item.pet_home.deed_of_ownership.desc","right click your pet, you can release it");
        add("block.pet_home.pet_bed_white","White Pet Bed");
        add("block.pet_home.pet_bed_orange","Orange Pet Bed");
        add("block.pet_home.pet_bed_magenta","Magenta Pet Bed");
        add("block.pet_home.pet_bed_light_blue","Light Blue Pet Bed");
        add("block.pet_home.pet_bed_yellow","Yellow Pet Bed");
        add("block.pet_home.pet_bed_lime","Lime Pet Bed");
        add("block.pet_home.pet_bed_pink","Pink Pet Bed");
        add("block.pet_home.pet_bed_gray","Gray Pet Bed");
        add("block.pet_home.pet_bed_light_gray","Light Gray Pet Bed");
        add("block.pet_home.pet_bed_cyan","Cyan Pet Bed");
        add("block.pet_home.pet_bed_purple","Purple Pet Bed");
        add("block.pet_home.pet_bed_blue","Blue Pet Bed");
        add("block.pet_home.pet_bed_brown","Brown Pet Bed");
        add("block.pet_home.pet_bed_green","Green Pet Bed");
        add("block.pet_home.pet_bed_red","Red Pet Bed");
        add("block.pet_home.pet_bed_black","Black Pet Bed");
        add("block.pet_home.drum","Command Drum");
        add("block.pet_home.wayward_lantern","Wayward Lantern");
        add("message.pet_home.command_0","%s is wandering");
        add("message.pet_home.command_1","%s is staying");
        add("message.pet_home.command_2","%s is following");
        add("message.pet_home.drum_command_0","ordered %s to wander");
        add("message.pet_home.drum_command_1","ordered %s to stay");
        add("message.pet_home.drum_command_2","ordered %s to follow");
        add("message.pet_home.respawn","%s has respawned at its bed");
        add("message.pet_home.remove_respawn","Removed respawn bed of %s");
        add("message.pet_home.goodbye","%s will not respawn. Goodbye...");
        add("message.pet_home.enchantments","Enchantments:");
        add("message.pet_home.set_owner","%s is now the owner of %s");
        add("message.pet_home.wayward_lantern_return","%s has found its way to a nearby Wayward Lantern");
        add("entity.minecraft.villager.pet_home.animal_tamer","Animal Tamer");
        add("entity.pet_home.chain_lightning","Lightning");
        add("entity.pet_home.recall_ball","Recall Orb");
        add("entity.pet_home.feather","Feather");
        add("entity.pet_home.following_jukebox","Floating Jukebox");
        add("entity.pet_home.psychic_wall","Psychic Wall");
        add("enchantment.pet_home.sonic_boom", "Sonic boom");
        add("enchantment.pet_home.sonic_boom.desc", "sonic boom can knockback enemy");
        add("enchantment.pet_home.health_boost","Extra Health");
        add("enchantment.pet_home.health_boost.desc","Increases pet's max health by 10 for each level");
        add("enchantment.pet_home.fireproof","Fireproof");
        add("enchantment.pet_home.fireproof.desc","Grants pet immunity to fire and lava damage");
        add("enchantment.pet_home.immunity_frame","Immunity Frame");
        add("enchantment.pet_home.immunity_frame.desc","Each level makes pet immune for an additional second after attack");
        add("enchantment.pet_home.deflection","Deflecting");
        add("enchantment.pet_home.deflection.desc","Pet is protected by a ghostly shield which deflects projectile attacks");
        add("enchantment.pet_home.poison_resistance","Poison Resistance");
        add("enchantment.pet_home.poison_resistance.desc","Grants pet immunity to poison effect");
        add("enchantment.pet_home.chain_lightning","Chain Lightning");
        add("enchantment.pet_home.chain_lightning.desc","Summons a lightning bolt that chains from and damages mobs each time a pet attacks, level increases how many mobs can be hit by lightning");
        add("enchantment.pet_home.speedster","Speedster");
        add("enchantment.pet_home.speedster.desc","Increases pet's movement speed");
        add("enchantment.pet_home.frost_fang","Frost Fang");
        add("enchantment.pet_home.frost_fang.desc","Pet attacks now slows mobs shortly and deals freezing damage");
        add("enchantment.pet_home.magnetic","Magnetic");
        add("enchantment.pet_home.magnetic.desc","Pet aided by ghostly magnet that pulls targeted mobs towards it");
        add("enchantment.pet_home.linked_inventory","Linked Inventory");
        add("enchantment.pet_home.linked_inventory.desc","Pet can pick up items and teleport them to owner's inventory");
        add("enchantment.pet_home.total_recall","Total Recall");
        add("enchantment.pet_home.total_recall.desc","When below 2 health, pet enters a recall orb and is protected until released by its owner");
        add("enchantment.pet_home.health_siphon","Health Siphon");
        add("enchantment.pet_home.health_siphon.desc","Any damage done to pet is transferred to its owner");
        add("enchantment.pet_home.bubbling","Bubbling");
        add("enchantment.pet_home.bubbling.desc","Pet attacks trap mob inside giant bubble that floats upwards");
        add("enchantment.pet_home.herding","Herding");
        add("enchantment.pet_home.herding.desc","Pet can be followed by wild animals, level increases maximum amount of followers");
        add("enchantment.pet_home.amphibious","Amphibious");
        add("enchantment.pet_home.amphibious.desc","Pet cannot dry out or drown on land or in water, increases speed in water, pet will not float but swim quickly");
        add("enchantment.pet_home.vampire","Vampire's Familiar");
        add("enchantment.pet_home.vampire.desc","Pet heals amount of damage done, level increases percentage of dealt damage healed");
        add("enchantment.pet_home.void_cloud","Void Cloud");
        add("enchantment.pet_home.void_cloud.desc","Pet is protected from falling off cliffs or into void by a large cloud that lifts it up and returns it to its owner");
        add("enchantment.pet_home.charisma","Charismatic");
        add("enchantment.pet_home.charisma.desc","Pet lowers trade prices for its owner, level increases the bargain");
        add("enchantment.pet_home.undead_curse","Curse of Afterlife");
        add("enchantment.pet_home.undead_curse.desc","Pet returns as a hostile, zombie pet after death");
        add("enchantment.pet_home.infamy_curse","Curse of Infamy");
        add("enchantment.pet_home.infamy_curse.desc","Pet can naturally make any nearby monster hostile to it");
        add("enchantment.pet_home.shadow_hands","Shadow Hands");
        add("enchantment.pet_home.shadow_hands.desc","Pet uses dark magic to attack targets with shadowy hands, level increases speed and amount of hands");
        add("enchantment.pet_home.disc_jockey","Disc Jockey");
        add("enchantment.pet_home.disc_jockey.desc","Pet is followed by a floating jukebox that can play music discs");
        add("enchantment.pet_home.defusal","Defusal");
        add("enchantment.pet_home.defusal.desc","Pet can nullify explosion damage to terrain and other mobs, level increases range");
        add("enchantment.pet_home.warping_bite","Warping Bite");
        add("enchantment.pet_home.warping_bite.desc","Pet will randomly teleport targeted mobs away from it");
        add("enchantment.pet_home.ore_scenting","Ore Scenting");
        add("enchantment.pet_home.ore_scenting.desc","Pet can sniff out ore blocks and alert its owner, level determines distance, amount and frequency of ore detection");
        add("enchantment.pet_home.gluttonous","Gluttonous");
        add("enchantment.pet_home.gluttonous.desc","Pet can eat any food item, regardless of dietary restrictions");
        add("enchantment.pet_home.psychic_wall","Psychic Wall");
        add("enchantment.pet_home.psychic_wall.desc","Pet summons a wall of psychic energy during combat to provide cover, level determines size of wall and length of the effect");
        add("enchantment.pet_home.intimidation","Intimidation");
        add("enchantment.pet_home.intimidation.desc","Pet can scare away hostile mobs with its fearsome appearance, level determines range and frequency of effect");
        add("enchantment.pet_home.blight_curse","Curse of Blight");
        add("enchantment.pet_home.blight_curse.desc","Plants will wither and die around the pet.");
        add("enchantment.pet_home.tethered_teleport","Tethered Teleport");
        add("enchantment.pet_home.tethered_teleport.desc","Pet will teleport with its owner, even across dimensions.");
        add("enchantment.pet_home.immaturity_curse","Curse of Immaturity");
        add("enchantment.pet_home.immaturity_curse.desc","Pet appears and behaves as a baby version of itself, with reduced attack damage.");
        add("enchantment.pet_home.muffled","Muffled");
        add("enchantment.pet_home.muffled.desc","Pet will be silent and not emit vibrations when moving.");
        add("enchantment.pet_home.blazing_protection","Blazing Protection");
        add("enchantment.pet_home.blazing_protection.desc","Pet will be protected from damage by 2 blazing bars per level, which knockback and set attackers on fire.");
        add("enchantment.pet_home.healing_aura","Healing Aura");
        add("enchantment.pet_home.healing_aura.desc","Pet will ocassionally heal owner and other pets around it, level determines strength of healing effect.");
        add("enchantment.pet_home.rejuvenation","Rejuvenation");
        add("enchantment.pet_home.rejuvenation.desc","When injured, pet may absorb experience orbs to heal itself.");
        add("pet_home.sound.subtitle.collar_tag","equipped Collar Tag");
        add("pet_home.sound.subtitle.magnet_loop","Magnet buzzes");
        add("pet_home.sound.subtitle.chain_lightning","Lightning zaps");
        add("pet_home.sound.subtitle.giant_bubble_inflate","Giant Bubble inflates");
        add("pet_home.sound.subtitle.giant_bubble_pop","Giant Bubble pops");
        add("pet_home.sound.subtitle.pet_bed_uses","Pet Bed adjusted");
        add("pet_home.sound.subtitle.drum","Command Drum beats");
        add("pet_home.sound.subtitle.psychic_wall","Psychic Wall hums");
        add("pet_home.sound.subtitle.psychic_wall_deflect","Psychic Wall deflects");
        add("pet_home.sound.subtitle.blazing_protection","Blazing bar dissapears");
        add("notif.friendlyfire.protected","The %s is protected. Crouch to bypass.");


        add(LangDefinition.conf("animal_tamer_villager"), "Animal Tamer");
        add(LangDefinition.conf("protectChildren.tooltip"), "Whether to protect juvenile creatures");
        add(LangDefinition.conf("displayHitWarning.tooltip"), "Whether to display protection warnings");
        add(LangDefinition.conf("rotten_apple"), "Apples become rotten apples when disappearing");
        add(LangDefinition.conf("rotten_apple.tooltip"), "Apples become rotten apples when disappearing");
        add("pet_home.configuration.sinister_carrot_loot_chance.tooltip", "Probability of Sinister Carrot in chests");
        add("pet_home.configuration.sinister_carrot_loot_chance", "Probability of Sinister Carrot in chests");
        add("pet_home.configuration.petstore_village_weight.tooltip", "Spawn weight of Animal Tamer buildings in villages,need to logout world and then login to take effect");
        add("pet_home.configuration.petstore_village_weight", "Spawn weight of Animal Tamer buildings in villages");
        add("pet_home.configuration.protectChildren", "Protect juvenile creatures");
        add("pet_home.configuration.respectTeamRules", "Respect team rules");
        add("pet_home.configuration.respectTeamRules.tooltip", "Match team rules: friendly fire on/off based on team settings");
        add("pet_home.configuration.protectPetsFromOwner.tooltip", "Owners cannot harm their pets");
        add("pet_home.configuration.protectPetsFromOwner", "Owners cannot harm their pets");
        add("pet_home.configuration.displayHitWarning", "Display protection warnings");
        add("pet_home.configuration.protectTeamMembers.tooltip", "No damage between creatures in the same team");
        add("pet_home.configuration.protectTeamMembers", "No damage between teammates");
        add("pet_home.configuration.protectPetsFromPets.tooltip", "No damage between pets");
        add("pet_home.configuration.protectPetsFromPets", "No damage between pets");
        add("pet_home.configuration.reflectDamage", "Reflect damage");
        add("pet_home.configuration.reflectDamage.tooltip", "Reflect damage (owner takes damage when attacking creatures)");
        add("pet_home.configuration.ore_scenting_loot_chance", "Probability of Ore Scenting enchantment book");
        add("pet_home.configuration.ore_scenting_loot_chance.tooltip", "Probability of Ore Scenting enchantment book in minecart chests (abandoned mineshafts)");
        add("pet_home.configuration.bubbling_loot_chance", "Probability of Bubbling enchantment book");
        add("pet_home.configuration.bubbling_loot_chance.tooltip", "Probability of Bubbling enchantment book in buried treasure chests");
        add("pet_home.configuration.blazing_protection_loot_chance.tooltip", "Probability of Blazing Protection enchantment book in nether fortress chests");
        add("pet_home.configuration.blazing_protection_loot_chance", "Probability of Blazing Protection enchantment book");
        add("pet_home.configuration.vampirism_loot_chance", "Probability of Vampirism enchantment book");
        add("pet_home.configuration.vampirism_loot_chance.tooltip", "Probability of Vampirism enchantment book in woodland mansion chests");
        add("pet_home.configuration.other_should_protect_entity.tooltip", "Other creatures to protect, e.g. villagers (immune to all attacks)");
        add("pet_home.configuration.other_should_protect_entity", "Other protected creatures");
        add("pet_home.configuration.no_protection_entity.tooltip", "Creatures not to protect, e.g. Piglins");
        add("pet_home.configuration.no_protection_entity", "Unprotected creatures");
        add("pet_home.configuration.player_cant_hurt_entity.tooltip", "Creatures players cannot attack, e.g. Zombified Piglins");
        add("pet_home.configuration.player_cant_hurt_entity", "Player-attack immune creatures");
        add("pet_home.configuration.can_hurt_pet_item.tooltip", "Items that can harm pets without needing to press Shift");
        add("pet_home.configuration.can_hurt_pet_item", "Pet-harming items");
        add("pet_home.configuration.can_hurt_all.tooltip", "Items that bypass all mod protections to damage creatures without needing to press Shift");
        add("pet_home.configuration.can_hurt_all", "All-protection bypass items");

        add(LangDefinition.effect("drunk"), "Chaos");
        add("enchantment.pet_home.share", "Share");
        add("enchantment.pet_home.share.desc", "When the pet is attacked, it shares damage with nearby hostile mobs");
        add("enchantment.pet_home.night_vision", "Night Vision");
        add("enchantment.pet_home.night_vision.desc", "Grants Night Vision effect when a pet is nearby");
        add("enchantment.pet_home.insight", "Insight");
        add("enchantment.pet_home.insight.desc", "In dark areas, pets highlight surrounding hostile mobs");
        add("enchantment.pet_home.chaos", "Chaos Mind");
        add("enchantment.pet_home.chaos.desc", "When attacked, pets inflict Chaos on the attacker, forcing them to attack other monsters within 10 blocks");
        add("enchantment.pet_home.paralysis", "Paralysis");
        add("enchantment.pet_home.paralysis.desc", "When attacked, pets paralyze the attacker for several seconds, preventing movement, jumping or attacking");
        add("pet_home.configuration.sonic_boom_loot_chance.tooltip", "Probability of Sonic Boom enchantment book appearing in Ancient City chests");
        add("pet_home.configuration.sonic_boom_loot_chance", "Sonic Boom Enchantment Chance");
        add("pet_home.configuration.share_loot_chance.tooltip", "Probability of Share enchantment book appearing in End City chests");
        add("pet_home.configuration.share_loot_chance", "Share Enchantment Chance");
        add("pet_home.configuration.paralysis_loot_chance.tooltip", "Probability of Paralysis enchantment book appearing in Abandoned Mineshaft chests, Desert Temple chests, Fishing loot");
        add("pet_home.configuration.paralysis_loot_chance", "Paralysis Enchantment Chance");

        add("enchantment.pet_home.tough", "Tough");
        add("enchantment.pet_home.tough.desc", "Increase pet defense and knockback resistance");
        add("enchantment.pet_home.violent", "violent");
        add("enchantment.pet_home.violent.desc", "monster will have some debuff when attacked by pet");
        add(LangDefinition.ConstantMsg.has_pet_bed_at_pos, "has petbed at ( %s )");
        add(PHItemRegistry.NET_LAUNCHER_ITEM.get(), "Creature Capture Launcher");
        add(PHItemRegistry.NET_ITEM.get(), "Capture Ball");
        add(PHItemRegistry.NET_HAS_ITEM.get(), "Capture Ball (Occupied)");
        add(LangDefinition.ConstantMsg.capturing_text, "Capturing");
        add(LangDefinition.ConstantMsg.release_text, "Release");
        add(LangDefinition.ConstantMsg.health_text, "Health");
        add(LangDefinition.ConstantMsg.no_net_entity_text, "No creature available to release");
        add(LangDefinition.ConstantMsg.net_launcher_tip, "[Hold Shift + Right Click to toggle between Capture and Release modes]");
    }
}
